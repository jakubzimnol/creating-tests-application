# Generated by Django 2.1.3 on 2018-11-20 10:41

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import rest_framework.compat


class Migration(migrations.Migration):

    replaces = [('creating_tests_app', '0001_initial'), ('creating_tests_app', '0002_auto_20181113_1528'), ('creating_tests_app', '0003_auto_20181114_1441'), ('creating_tests_app', '0004_answerbase_points'), ('creating_tests_app', '0005_auto_20181115_1905'), ('creating_tests_app', '0006_auto_20181116_0953')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnswerBase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice_name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='QuestionBase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_content', models.TextField()),
                ('number', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('question_type', models.CharField(choices=[('OP', 'Open question'), ('CO', 'Choice one question'), ('CM', 'Choice multi question'), ('BO', 'Boolean question'), ('SC', 'Scale question')], default='OP', max_length=2)),
            ],
            options={
                'ordering': ['number'],
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('description', models.TextField()),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tests', to=settings.AUTH_USER_MODEL)),
                ('user_answered', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BooleanAnswer',
            fields=[
                ('answerbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='creating_tests_app.AnswerBase')),
            ],
            bases=('creating_tests_app.answerbase',),
        ),
        migrations.CreateModel(
            name='BooleanQuestion',
            fields=[
                ('questionbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='creating_tests_app.QuestionBase')),
                ('proper_answer', models.BooleanField()),
            ],
            bases=('creating_tests_app.questionbase',),
        ),
        migrations.CreateModel(
            name='ChoiceAnswer',
            fields=[
                ('answerbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='creating_tests_app.AnswerBase')),
            ],
            bases=('creating_tests_app.answerbase',),
        ),
        migrations.CreateModel(
            name='ChoiceQuestion',
            fields=[
                ('questionbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='creating_tests_app.QuestionBase')),
                ('one_choice', models.BooleanField(default=False)),
            ],
            bases=('creating_tests_app.questionbase',),
        ),
        migrations.CreateModel(
            name='OpenAnswer',
            fields=[
                ('answerbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='creating_tests_app.AnswerBase')),
                ('answer', models.TextField()),
            ],
            bases=('creating_tests_app.answerbase',),
        ),
        migrations.CreateModel(
            name='OpenQuestion',
            fields=[
                ('questionbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='creating_tests_app.QuestionBase')),
                ('proper_answer', models.TextField(null=True)),
            ],
            bases=('creating_tests_app.questionbase',),
        ),
        migrations.CreateModel(
            name='ScaleAnswer',
            fields=[
                ('answerbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='creating_tests_app.AnswerBase')),
                ('answer', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), rest_framework.compat.MaxValueValidator(10)])),
            ],
            bases=('creating_tests_app.answerbase',),
        ),
        migrations.CreateModel(
            name='ScaleQuestion',
            fields=[
                ('questionbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='creating_tests_app.QuestionBase')),
                ('proper_answer', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), rest_framework.compat.MaxValueValidator(10)])),
            ],
            bases=('creating_tests_app.questionbase',),
        ),
        migrations.AddField(
            model_name='questionbase',
            name='test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='creating_tests_app.Test'),
        ),
        migrations.AddField(
            model_name='answerbase',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='choice',
            name='question_options',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='creating_tests_app.ChoiceQuestion'),
        ),
        migrations.AddField(
            model_name='choice',
            name='question_proper_answer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='proper_answer', to='creating_tests_app.ChoiceQuestion'),
        ),
        migrations.AddField(
            model_name='choice',
            name='question_user_answer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='answer', to='creating_tests_app.ChoiceAnswer'),
        ),
        migrations.AddField(
            model_name='answerbase',
            name='question',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='answer', to='creating_tests_app.QuestionBase'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='answerbase',
            name='points',
            field=models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), rest_framework.compat.MaxValueValidator(1)]),
        ),
        migrations.RenameField(
            model_name='choice',
            old_name='choice_name',
            new_name='name',
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.FloatField()),
                ('grade', models.FloatField()),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='creating_tests_app.Test')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
